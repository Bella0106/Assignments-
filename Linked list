#include <iostream>
using namespace std;
struct Node {
    int data;
    Node* next;
};

// Function to add a node at the start
void insertAtStart(Node*& head, int value) {
    Node* newNode = new Node();  // new nodee
    newNode->data = value;
    newNode->next = head;  
    head = newNode;       
}

//  delete a node at the start
void deleteAtStart(Node*& head) {
    if (head == nullptr) {
        cout << "List is empty, nothing to delete." << endl;
        return;
    }
    Node* temp = head;      // store the current head
    head = head->next;      // move head to next node
    delete temp;            // delete the old head
}

// Function to display the linked list
void display(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

int main() {
    Node* head = nullptr;  // empty list

    insertAtStart(head, 30);
    insertAtStart(head, 20);
    insertAtStart(head, 10);

    cout << "Linked list after adding nodes: ";
    display(head);

    // Delete node at start
    deleteAtStart(head);

    cout << "Linked list after deleting from start: ";
    display(head);

    return 0;
}
